{"componentChunkName":"component---src-templates-blog-js","path":"/algos/392_Is_Subsequence","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Is Subsequence","date":"2020.06.09","number":392},"html":"<div class=\"toc\">\n<ul>\n<li><a href=\"#resources\">Resources</a></li>\n<li><a href=\"#two-pointer-on--o1\">Two-Pointer: O(n) / O(1)</a></li>\n</ul>\n</div>\n<h1 id=\"resources\" style=\"position:relative;\"><a href=\"#resources\" aria-label=\"resources permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resources</h1>\n<p>Question Source: <a href=\"https://leetcode.com/problems/is-subsequence/\">https://leetcode.com/problems/is-subsequence/</a></p>\n<h1 id=\"two-pointer-on--o1\" style=\"position:relative;\"><a href=\"#two-pointer-on--o1\" aria-label=\"two pointer on  o1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Two-Pointer: O(n) / O(1)</h1>\n<h2 id=\"intuition\" style=\"position:relative;\"><a href=\"#intuition\" aria-label=\"intuition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intuition</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Given t_str = &#39;abcdef&#39;\nGiven s_str = &#39;cef&#39;</code></pre></div>\n<p>Since the subsequence has to be in the same order as the original string, we only need to iterate through the original string <code class=\"language-text\">t_str</code> once in order to check if <code class=\"language-text\">s_str</code> is a subsequence.</p>\n<p>We can use 2 pointers starting from the first index of each string, and check for matches.<br>\nLet's call the <code class=\"language-text\">t</code> pointer for <code class=\"language-text\">t_str</code> and <code class=\"language-text\">s</code> the pointer for <code class=\"language-text\">s_str</code></p>\n<h2 id=\"trace-positive-case\" style=\"position:relative;\"><a href=\"#trace-positive-case\" aria-label=\"trace positive case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Trace: Positive Case</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Given t_str = &#39;abcdef&#39;\nGiven s_str = &#39;cef&#39;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">abcdef   cef\nt        s    no match - move t forward\nabcdef   cef\n t       s    no match - move t forward\nabcdef   cef\n  t      s    match! - move both t and s forward\nabcdef   cef\n   t      s   no match - move t forward\nabcdef   cef\n    t     s   match! - move both t and s foward\nabcdef   cef\n     t     s  match! - move both t and s foward\nabcdef   cef\n      t     s both t and s are now at an outside of range. Return True</code></pre></div>\n<h2 id=\"trace-negative-case\" style=\"position:relative;\"><a href=\"#trace-negative-case\" aria-label=\"trace negative case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Trace: Negative Case</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Given t_str = &#39;abcdef&#39;\nGiven s_str = &#39;fcd&#39;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">abcdef   fcd\nt        s    no match - move t forward\nabcdef   fcd\n t       s    no match - move t forward\nabcdef   fcd\n  t      s    no match - move t forward\nabcdef   fcd\n   t     s    no match - move t forward\nabcdef   fcd\n    t    s    no match - move t forward\nabcdef   fcd\n     t   s    match! - move both t and s forward\nabcdef   fcd\n      t   s   t is outside of range, but s is not. Return False.</code></pre></div>\n<h2 id=\"code\" style=\"position:relative;\"><a href=\"#code\" aria-label=\"code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Code</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">isSubsequence</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s_str<span class=\"token punctuation\">,</span> t_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        Checks if s is a subsequence of t\n        s type: str\n        t type: str\n        rtype: bool\n        \"\"\"</span>\n        s <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        t <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">while</span> s <span class=\"token operator\">&lt;=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s_str<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> t <span class=\"token operator\">></span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>t_str<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">and</span> s <span class=\"token operator\">&lt;=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s_str<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n            <span class=\"token keyword\">if</span> s_str<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> t_str<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                t <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                s <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                t <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\ns <span class=\"token operator\">=</span> Solution<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>isSubsequence<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># true</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>isSubsequence<span class=\"token punctuation\">(</span><span class=\"token string\">'abb'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'babb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># true</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>isSubsequence<span class=\"token punctuation\">(</span><span class=\"token string\">'hgc'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ahbgdc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># true</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>isSubsequence<span class=\"token punctuation\">(</span><span class=\"token string\">'bbb'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'bbbbb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># true</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>isSubsequence<span class=\"token punctuation\">(</span><span class=\"token string\">'ab'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># false</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>isSubsequence<span class=\"token punctuation\">(</span><span class=\"token string\">'hac'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'ahbgdc'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># false</span></code></pre></div>"}},"pageContext":{"slug":"392_Is_Subsequence"}}}