{"componentChunkName":"component---src-templates-blog-js","path":"/algos/1446_Consecutive_Characters","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Consecutive Characters","date":"2020.06.09","number":1446},"html":"<div class=\"toc\">\n<ul>\n<li><a href=\"#overview\">Overview</a></li>\n</ul>\n</div>\n<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<p>Given a string s, the power of the string is the maximum length of a non-empty substring that contains only one unique character.</p>\n<p>Return the power of the string.</p>\n<p><strong>Example 1:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Input: s = &quot;leetcode&quot;\nOutput: 2\nExplanation: The substring &quot;ee&quot; is of length 2 with the character &#39;e&#39; only.</code></pre></div>\n<p><strong>Example 2:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Input: s = &quot;abbcccddddeeeeedcba&quot;\nOutv\nExplanation: The substring &quot;eeeee&quot; is of length 5 with the character &#39;e&#39; only.</code></pre></div>\n<p><strong>Example 3:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Input: s = &quot;triplepillooooow&quot;\nOutput: 5</code></pre></div>\n<p><strong>Example 4:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Input: s = &quot;hooraaaaaaaaaaay&quot;\nOutput: 11</code></pre></div>\n<p><strong>Example 5:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Input: s = &quot;tourist&quot;\nOutput: 1</code></pre></div>\n<h2 id=\"constraints\" style=\"position:relative;\"><a href=\"#constraints\" aria-label=\"constraints permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Constraints:</h2>\n<ul>\n<li>1 &#x3C;= s.length &#x3C;= 500</li>\n<li>s contains only lowercase English letters.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">maxPower</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n        power <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        cur_power <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n        prev_char <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n        <span class=\"token keyword\">if</span> s <span class=\"token operator\">==</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> char <span class=\"token operator\">==</span> prev_char<span class=\"token punctuation\">:</span>\n                cur_power <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                cur_power <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">if</span> cur_power <span class=\"token operator\">></span> power<span class=\"token punctuation\">:</span>\n                power <span class=\"token operator\">=</span> cur_power\n            prev_char <span class=\"token operator\">=</span> char\n        <span class=\"token keyword\">return</span> power\n\ns <span class=\"token operator\">=</span> Solution<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>maxPower<span class=\"token punctuation\">(</span><span class=\"token string\">\"leetcode\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>maxPower<span class=\"token punctuation\">(</span><span class=\"token string\">\"abbcccddddeeeeedcba\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 5</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>maxPower<span class=\"token punctuation\">(</span><span class=\"token string\">\"triplepillooooow\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 5</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>maxPower<span class=\"token punctuation\">(</span><span class=\"token string\">\"hooraaaaaaaaaaay\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 11</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>maxPower<span class=\"token punctuation\">(</span><span class=\"token string\">\"tourist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>maxPower<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>"}},"pageContext":{"slug":"1446_Consecutive_Characters"}}}