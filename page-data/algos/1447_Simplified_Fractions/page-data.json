{"componentChunkName":"component---src-templates-blog-js","path":"/algos/1447_Simplified_Fractions","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Simplified Fractions","date":"2020.05.16","number":1447},"html":"<div class=\"toc\">\n<ul>\n<li><a href=\"#resources\">Resources</a></li>\n<li><a href=\"#recursion\">Recursion</a></li>\n</ul>\n</div>\n<h1 id=\"resources\" style=\"position:relative;\"><a href=\"#resources\" aria-label=\"resources permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resources</h1>\n<p>Question Source: <a href=\"https://leetcode.com/problems/simplified-fractions\">https://leetcode.com/problems/simplified-fractions</a></p>\n<h1 id=\"recursion\" style=\"position:relative;\"><a href=\"#recursion\" aria-label=\"recursion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recursion</h1>\n<p>How to detect if a fraction is \"simple\"?</p>\n<p>ODD DENOMINATOR ans = [(1/9), (2/9), (4/9), (5/9), (7/9), (8/9)] divisors = {3}</p>\n<p>1/9 2/9 9%2 != 0 3/9 9%3 = 0 -> ADD TO DIVISORS LIST 4/9 9%4 != 0 5/9 9%5 != 0 6/9 9%6 != 0, 6%3 = 0 7/9 8/9</p>\n<p>EVEN DENOM = 14</p>\n<p>ans = [] divisors = {}</p>\n<p>1/14 2/14 4/14 14%4 !=0 14%2</p>\n<h3 id=\"recursive\" style=\"position:relative;\"><a href=\"#recursive\" aria-label=\"recursive permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Recursive</h3>\n<p>Since the question wants us to include all the simple fractions for every n &#x3C;= n, we will recurse the function with every n - 1.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">simplifiedFractions</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_recurse<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">_recurse</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"1/\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        divisors <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            fraction <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n            new <span class=\"token operator\">=</span> fraction <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> ans\n            <span class=\"token keyword\">if</span> n<span class=\"token operator\">%</span>num <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                divisors<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># check if divided by divisor of n</span>\n                <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> divisors <span class=\"token keyword\">and</span> new<span class=\"token punctuation\">:</span>\n                    ans<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>fraction<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    add_to_ans <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n                    <span class=\"token keyword\">for</span> divisor <span class=\"token keyword\">in</span> divisors<span class=\"token punctuation\">:</span>\n                        <span class=\"token keyword\">if</span> num<span class=\"token operator\">%</span>divisor <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                            add_to_ans <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n                            <span class=\"token keyword\">break</span>\n                    <span class=\"token keyword\">if</span> add_to_ans <span class=\"token operator\">==</span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">and</span> new<span class=\"token punctuation\">:</span>\n                        ans<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>fraction<span class=\"token punctuation\">)</span>\n\n        ans <span class=\"token operator\">+=</span> self<span class=\"token punctuation\">.</span>_recurse<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>ans<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> ans\n\n\ns <span class=\"token operator\">=</span> Solution<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>simplifiedFractions<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>simplifiedFractions<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>simplifiedFractions<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>simplifiedFractions<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>simplifiedFractions<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>simplifiedFractions<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># print(s.simplifiedFractions(15))</span>\n<span class=\"token comment\"># print(s.simplifiedFractions(23))</span></code></pre></div>"}},"pageContext":{"slug":"1447_Simplified_Fractions"}}}