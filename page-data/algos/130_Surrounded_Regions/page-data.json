{"componentChunkName":"component---src-templates-blog-js","path":"/algos/130_Surrounded_Regions","result":{"data":{"markdownRemark":{"frontmatter":{"title":"","date":null,"number":null},"html":"<h1 id=\"resources\" style=\"position:relative;\"><a href=\"#resources\" aria-label=\"resources permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resources</h1>\n<p>Question Source: <a href=\"https://leetcode.com/problems/surrounded-regions\">https://leetcode.com/problems/surrounded-regions</a></p>\n<h1 id=\"graph-traversal\" style=\"position:relative;\"><a href=\"#graph-traversal\" aria-label=\"graph traversal permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Graph Traversal:</h1>\n<h2 id=\"intuition\" style=\"position:relative;\"><a href=\"#intuition\" aria-label=\"intuition permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intuition</h2>\n<p>A region is NOT surrounded if any of the <code class=\"language-text\">o</code>s are able to reach the edge of the map. We can use either BFS or DFS to traverse any region and see if it reaches the edge.</p>\n<p><strong>Main tasks:</strong></p>\n<ol>\n<li>Determine where the regions are: [[200<em>Number</em>of_Islands]]</li>\n<li>Traverse every region</li>\n<li>Toggle <code class=\"language-text\">o</code>s to <code class=\"language-text\">x</code>s if the region is surrounded</li>\n</ol>\n<p><strong>Detailed Steps</strong></p>\n<ol>\n<li>\n<p>Start at cell (0,0). </p>\n<ol>\n<li>If not <code class=\"language-text\">o</code> move to next cell</li>\n<li>If <code class=\"language-text\">o</code> start BFS</li>\n<li>Keep track of cells that have already been visited</li>\n</ol>\n</li>\n<li>\n<p>BFS:</p>\n<ol>\n<li>Add the cell to visited set</li>\n<li>Add the cell to current region set</li>\n<li>Traverse until no more <code class=\"language-text\">o</code>s</li>\n<li>If didn't reach edge, flip all <code class=\"language-text\">o</code> to <code class=\"language-text\">x</code></li>\n</ol>\n</li>\n<li>Continue to go through grid until last cell is reached.</li>\n</ol>\n<h2 id=\"code\" style=\"position:relative;\"><a href=\"#code\" aria-label=\"code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Code</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">solve</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> board<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        Do not return anything, modify board in-place instead.\n        \"\"\"</span>     \n\t\t<span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n\n\t\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token keyword\">def</span> <span class=\"token function\">solve</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> board<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t\t\t<span class=\"token triple-quoted-string string\">\"\"\"\n\t\t\t\tDo not return anything, modify board in-place instead.\n\t\t\t\t\"\"\"</span>\n\t\t\t\trows <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">)</span>\n\t\t\t\tcols <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\t\t\t\tvisited <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t\t\t\t\n\t\t\t\t<span class=\"token keyword\">def</span> <span class=\"token function\">bfs</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t\t\t\tcoor <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">]</span>\n\t\t\t\t\tsurrounded <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\t\t\t\t\tqueue <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\tisland <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t\t\t\t\t\n\t\t\t\t\tqueue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>cell<span class=\"token punctuation\">)</span>\n\t\t\t\t\t\n\t\t\t\t\t<span class=\"token keyword\">while</span> queue<span class=\"token punctuation\">:</span>\n\t\t\t\t\t\t<span class=\"token builtin\">dir</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t\t\t\t\t\t<span class=\"token keyword\">for</span> d <span class=\"token keyword\">in</span> <span class=\"token builtin\">dir</span><span class=\"token punctuation\">:</span>\n\t\t\t\t\t\t\tr <span class=\"token operator\">=</span> coor<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">dir</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\t\t\t\t\t\t\tc <span class=\"token operator\">=</span> coor<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">dir</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\t\t\t\t\t\t\t<span class=\"token comment\"># edge is reached - not surrounded</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">if</span> r <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> c <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t\t\t\t\t\t\t\tsurrounded <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\t\t\t\t\t\t\t\tqueue<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t<span class=\"token comment\"># keep looking for more 'O'</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">elif</span> board<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'O'</span> <span class=\"token keyword\">and</span> board<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> visited<span class=\"token punctuation\">:</span>\n\t\t\t\t\t\t\t\tqueue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t\tisland<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t\tqueue<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token comment\"># toggle 'O' to 'X' if surrounded</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> surrounded<span class=\"token punctuation\">:</span>\n\t\t\t\t\t\t<span class=\"token keyword\">for</span> r<span class=\"token punctuation\">,</span>c <span class=\"token keyword\">in</span> island<span class=\"token punctuation\">:</span>\n\t\t\t\t\t\t\tboard<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'X'</span>\n\n\t\t\t\t<span class=\"token keyword\">for</span> r <span class=\"token keyword\">in</span> rows<span class=\"token punctuation\">:</span>\n\t\t\t\t\t<span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> cols<span class=\"token punctuation\">:</span>\n\t\t\t\t\t\tisland <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t\t\t\t\t\tcell <span class=\"token operator\">=</span> board<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span> cell <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> visited <span class=\"token keyword\">and</span> cell <span class=\"token operator\">==</span> <span class=\"token string\">'O'</span><span class=\"token punctuation\">:</span>\n\t\t\t\t\t\t\tbfs<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span>\n\t\t\t\t\n\t\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">)</span>\n\ns <span class=\"token operator\">=</span> Solution<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nboard <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">,</span>X<span class=\"token punctuation\">,</span>X<span class=\"token punctuation\">,</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t <span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">,</span>O<span class=\"token punctuation\">,</span>O<span class=\"token punctuation\">,</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t <span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">,</span>X<span class=\"token punctuation\">,</span>O<span class=\"token punctuation\">,</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t <span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">,</span>O<span class=\"token punctuation\">,</span>X<span class=\"token punctuation\">,</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\ns<span class=\"token punctuation\">.</span>solve<span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">)</span></code></pre></div>"}},"pageContext":{"slug":"130_Surrounded_Regions"}}}