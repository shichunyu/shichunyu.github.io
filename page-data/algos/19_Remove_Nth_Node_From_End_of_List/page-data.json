{"componentChunkName":"component---src-templates-blog-js","path":"/algos/19_Remove_Nth_Node_From_End_of_List","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Remove Nth Node From End of List","date":"2020.05.05","number":19},"html":"<div class=\"toc\">\n<ul>\n<li><a href=\"#overview\">Overview</a></li>\n<li><a href=\"#2-pointer-shichunyu-on-may-5-2020\">2-Pointer @shichunyu on May 5, 2020</a></li>\n</ul>\n</div>\n<h1 id=\"overview\" style=\"position:relative;\"><a href=\"#overview\" aria-label=\"overview permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overview</h1>\n<p>Given a linked list, remove the n-th node from the end of list and return its head.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Given linked list: 1-&gt;2-&gt;3-&gt;4-&gt;5, and n = 2.\n\nAfter removing the second node from the end, the linked list becomes 1-&gt;2-&gt;3-&gt;5.</code></pre></div>\n<p><strong>Note:</strong> Given n will always be valid.</p>\n<p><strong>Follow up:</strong> Could you do this in one pass?</p>\n<h1 id=\"2-pointer-shichunyu-on-may-5-2020\" style=\"position:relative;\"><a href=\"#2-pointer-shichunyu-on-may-5-2020\" aria-label=\"2 pointer shichunyu on may 5 2020 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2-Pointer @shichunyu on May 5, 2020</h1>\n<p><code class=\"language-text\">O(N) Time &amp; Space Complexity</code> Runtime: 36 ms, faster than 32.41% of Python3 online submissions for Remove Nth Node From End of List. Memory Usage: 13.9 MB, less than 6.06% of Python3 online submissions for Remove Nth Node From End of List.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Definition for singly-linked list.</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ListNode</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> val<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">next</span><span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>val <span class=\"token operator\">=</span> val\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">removeNthFromEnd</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> head<span class=\"token punctuation\">:</span> ListNode<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> ListNode<span class=\"token punctuation\">:</span>\n        dummy <span class=\"token operator\">=</span> ListNode<span class=\"token punctuation\">(</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span>head<span class=\"token punctuation\">)</span>\n        dummy<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> head\n        front <span class=\"token operator\">=</span> dummy\n        back <span class=\"token operator\">=</span> dummy\n        c <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n        <span class=\"token keyword\">while</span> c <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">:</span>\n            front <span class=\"token operator\">=</span> front<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n            c <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n        <span class=\"token keyword\">while</span> front<span class=\"token punctuation\">:</span>\n            front <span class=\"token operator\">=</span> front<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n            back <span class=\"token operator\">=</span> back<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n\n        back<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> back<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n\n        <span class=\"token keyword\">return</span> dummy<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n\n\nn5 <span class=\"token operator\">=</span> ListNode<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\nn4 <span class=\"token operator\">=</span> ListNode<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>n5<span class=\"token punctuation\">)</span>\nn3 <span class=\"token operator\">=</span> ListNode<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>n4<span class=\"token punctuation\">)</span>\nn2 <span class=\"token operator\">=</span> ListNode<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>n3<span class=\"token punctuation\">)</span>\nn1 <span class=\"token operator\">=</span> ListNode<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>n2<span class=\"token punctuation\">)</span>\n\ns <span class=\"token operator\">=</span> Solution<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>removeNthFromEnd<span class=\"token punctuation\">(</span>n1<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>"}},"pageContext":{"slug":"19_Remove_Nth_Node_From_End_of_List"}}}