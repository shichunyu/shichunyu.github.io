{"componentChunkName":"component---src-templates-blog-js","path":"/blog/0518. Coin Change II","result":{"data":{"markdownRemark":{"frontmatter":{"title":"","date":null},"html":"<h1>0518. Coin Change II</h1>\n<p>Tags: #_study/algos\nRelated to:\nBacklinks:</p>\n<hr>\n<p>You are given coins of different denominations and a total amount of money. Write a function to compute the number of combinations that make up that amount. You may assume that you have infinite number of each kind of coin.</p>\n<pre><code>Example 1:\nInput: amount = 5, coins = [1, 2, 5]\nOutput: 4\nExplanation: there are four ways to make up the amount:\n5=5\n5=2+2+1\n5=2+1+1+1\n5=1+1+1+1+1\n</code></pre>\n<pre><code>Example 2:\nInput: amount = 3, coins = [2]\nOutput: 0\nExplanation: the amount of 3 cannot be made up just with coins of 2.\n</code></pre>\n<pre><code>Example 3:\nInput: amount = 10, coins = [10] \nOutput: 1\n</code></pre>\n<p><strong>Note:</strong>\nYou can assume that</p>\n<ul>\n<li>0 &#x3C;= amount &#x3C;= 5000</li>\n<li>1 &#x3C;= coin &#x3C;= 5000</li>\n<li>the number of coins is less than 500</li>\n<li>the answer is guaranteed to fit into signed 32-bit integer</li>\n</ul>\n<h2>âœ… Dynamic Programming Solution - May 31, 2020</h2>\n<p>Coins: $1, $5, $10, $25\nWhat are the total number of ways to make $10?\n<img src=\"0518.%20Coin%20Change%20II/950A779B-A5E9-4184-80E0-40878108B808.png\"></p>\n<pre><code class=\"language-py\">class Solution:\n    def change(self, amount, coins):\n        \"\"\"\n        Given a set of coin denominations, return the total number of combinations that sum up to given amount.\n        amount type: int\n        coins type: List[int]\n        rtype: int\n        \"\"\"\n        # Initiate array with one extra index for $0\n        total_ways = [0] * (amount + 1)\n        # There is always 1 way to make $0, which is to have no coins\n        total_ways[0] = 1\n        for c in coins:\n            for i in range(1,amount+1):\n                if i >= c:\n                    total_ways[i] += total_ways[i-c]\n        print(total_ways)\n        return total_ways[-1]\n\ns = Solution()\nprint(s.change(10,[1,5,10,25])) # 3\n</code></pre>\n<hr>\n<p><strong>References:</strong> AlgoExpert for DP Solution</p>"}},"pageContext":{"slug":"0518. Coin Change II"}}}