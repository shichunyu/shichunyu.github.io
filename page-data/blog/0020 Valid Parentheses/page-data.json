{"componentChunkName":"component---src-templates-blog-js","path":"/blog/0020 Valid Parentheses","result":{"data":{"markdownRemark":{"frontmatter":{"title":"","date":null},"html":"<h1 id=\"0020-valid-parentheses\" style=\"position:relative;\"><a href=\"#0020-valid-parentheses\" aria-label=\"0020 valid parentheses permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0020. Valid Parentheses</h1>\n<h2 id=\"20-valid-parentheses\" style=\"position:relative;\"><a href=\"#20-valid-parentheses\" aria-label=\"20 valid parentheses permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>20. Valid Parentheses</h2>\n<p>Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.</p>\n<p>An input string is valid if:</p>\n<ul>\n<li>Open brackets must be closed by the same type of brackets.</li>\n<li>Open brackets must be closed in the correct order.</li>\n</ul>\n<p>Note that an empty string is also considered valid.</p>\n<p>Example 1:</p>\n<pre><code class=\"language-text\">Input: \"()\"\nOutput: true\n</code></pre>\n<p>Example 2:</p>\n<pre><code class=\"language-text\">Input: \"()[]{}\"\nOutput: true\n</code></pre>\n<p>Example 3:</p>\n<pre><code class=\"language-text\">Input: \"(]\"\nOutput: false\n</code></pre>\n<p>Example 4:</p>\n<pre><code class=\"language-text\">Input: \"([)]\"\nOutput: false\n</code></pre>\n<p>Example 5:</p>\n<pre><code class=\"language-text\">Input: \"{[]}\"\nOutput: true\n</code></pre>\n<h2 id=\"-stacks-shichunyu-on-may-5-2020\" style=\"position:relative;\"><a href=\"#-stacks-shichunyu-on-may-5-2020\" aria-label=\" stacks shichunyu on may 5 2020 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ Stacks @shichunyu on May 5, 2020</h2>\n<p><code>O(N) Time &#x26; Space</code> Runtime: 28 ms, faster than 72.47% of Python3 online submissions for Valid Parentheses. Memory Usage: 13.9 MB, less than 5.22% of Python3 online submissions for Valid Parentheses.</p>\n<pre><code class=\"language-python\">class Solution:\n    def isValid(self, s: str) -> bool:\n        parens = ['(',')','[',']','{','}']\n        stack = []\n\n        if len(s) == 0:\n            return True\n        elif len(s) == 1 or parens.index(s[0]) % 2 != 0:\n            return False\n\n        for c in s:\n            c_idx_p = parens.index(c)\n\n            if c_idx_p % 2 == 0: # modulus checks if there is a remainder, if yes, output 1\n                stack.append(c)\n            else:\n                if len(stack) != 0:\n                    idx_last_stack_item = parens.index(stack[len(stack)-1])\n                    if c_idx_p == idx_last_stack_item + 1:\n                        pop = stack.pop()\n                    else:\n                        return False\n                else:\n                    return False\n\n        if len(stack) == 0:\n            return True\n        else:\n            return False\n\ns = Solution()\nprint(s.isValid(\"{[]}\")) # true\nprint(s.isValid(\"\")) # true\nprint(s.isValid(\"(\")) # false\nprint(s.isValid(\"()\")) # true\nprint(s.isValid(\"[])\")) # false\n</code></pre>\n<h2 id=\"️-elegant-fast-solution\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-elegant-fast-solution\" aria-label=\"️ elegant fast solution permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⭐️ Elegant Fast Solution</h2>\n<p>20ms</p>\n<pre><code class=\"language-python\">def isValid(self, s):\n    bracket_map = {\"(\": \")\", \"[\": \"]\",  \"{\": \"}\"}\n    open_par = set([\"(\", \"[\", \"{\"])\n    stack = []\n    for i in s:\n        if i in open_par:\n            stack.append(i)\n        elif stack and i == bracket_map[stack[-1]]:\n                stack.pop()\n        else:\n            return False\n    return stack == []\n</code></pre>"}},"pageContext":{"slug":"0020 Valid Parentheses"}}}