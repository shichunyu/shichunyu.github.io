{"componentChunkName":"component---src-templates-blog-js","path":"/blog/0078 Subsets Power Set","result":{"data":{"markdownRemark":{"frontmatter":{"title":"","date":null},"html":"<h1 id=\"78-subsets-power-set\" style=\"position:relative;\"><a href=\"#78-subsets-power-set\" aria-label=\"78 subsets power set permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>78. Subsets (Power Set)</h1>\n<ul>\n<li>ChunYu: May 03, 2020</li>\n<li>ID: 78</li>\n<li>Level: Medium</li>\n</ul>\n<p>Given a set of <strong>distinct</strong> integers, <em>nums</em>, return all possible subsets (the power set).</p>\n<p><strong>Note:</strong> The solution set must not contain duplicate subsets.</p>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-text\">Input: nums = [1,2,3]\nOutput:\n[\n  [3],\n  [1],\n  [2],\n  [1,2,3],\n  [1,3],\n  [2,3],\n  [1,2],\n  []\n]\n</code></pre>\n<h2 id=\"while-loop-shichunyu-shi\" style=\"position:relative;\"><a href=\"#while-loop-shichunyu-shi\" aria-label=\"while loop shichunyu shi permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✔While Loop @shichunyu Shi</h2>\n<p>Runtime: 76 ms, faster than 5.12% of Python3 online submissions for Subsets.</p>\n<p>Memory Usage: 14.1 MB, less than 5.95% of Python3 online submissions for Subsets.</p>\n<pre><code class=\"language-python\">class Solution:\n    def subsets(self, nums):\n        index = 0\n        value=nums[index]\n        ans = [[]]\n        memo = {0:None}\n\n        ans.append([])\n        # base case [1,2,3]\n        for i in nums:\n            ans[1].append(i)\n\n        for i in ans:\n            if len(i) > 1:\n                j=len(i)-1\n                while j >= 0:\n                    copy = i[:]\n                    copy.remove(i[j])\n                    if copy not in ans:\n                        ans.append(copy)\n                    j-=1\n        return ans\n\nproblem = Solution()\n\nprint(problem.subsets([1,2,3]))\n</code></pre>\n<h2 id=\"recursive\" style=\"position:relative;\"><a href=\"#recursive\" aria-label=\"recursive permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>⭐Recursive</h2>\n<pre><code class=\"language-python\">def powerSet(array, idx = None):\n    if idx is None:\n        idx = len(array) - 1\n    elif idx &#x3C; 0:\n        return [[]]\n    ele = array[idx]\n    subsets = powerSet(array, idx - 1)\n    for i in range(len(subsets)):\n        currentSubset = subsets[i]\n        subsets.append(currentSubset + [ele])\n    return subsets\n\npowerSet([1,2,3])\n</code></pre>\n<h2 id=\"iterative\" style=\"position:relative;\"><a href=\"#iterative\" aria-label=\"iterative permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🌟Iterative</h2>\n<pre><code class=\"language-python\">def powerSet(array):\n    subsets=[[]]\n    for ele in array:\n        for i in range(len(subsets)):\n            currentSubset = subsets[i]\n            subsets.append(currentSubset + [ele])\n    return subsets\n\npowerSet([1,2,3])\n</code></pre>"}},"pageContext":{"slug":"0078 Subsets Power Set"}}}