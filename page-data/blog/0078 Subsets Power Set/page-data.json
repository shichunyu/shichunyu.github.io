{"componentChunkName":"component---src-templates-blog-js","path":"/blog/0078 Subsets Power Set","result":{"data":{"markdownRemark":{"frontmatter":{"title":"","date":null},"html":"<h1>78. Subsets (Power Set)</h1>\n<ul>\n<li>ChunYu: May 03, 2020</li>\n<li>ID: 78</li>\n<li>Level: Medium</li>\n</ul>\n<p>Given a set of <strong>distinct</strong> integers, <em>nums</em>, return all possible subsets (the power set).</p>\n<p><strong>Note:</strong> The solution set must not contain duplicate subsets.</p>\n<p><strong>Example:</strong></p>\n<pre><code class=\"language-text\">Input: nums = [1,2,3]\nOutput:\n[\n  [3],\n  [1],\n  [2],\n  [1,2,3],\n  [1,3],\n  [2,3],\n  [1,2],\n  []\n]\n</code></pre>\n<h2>✔While Loop @shichunyu Shi</h2>\n<p>Runtime: 76 ms, faster than 5.12% of Python3 online submissions for Subsets.</p>\n<p>Memory Usage: 14.1 MB, less than 5.95% of Python3 online submissions for Subsets.</p>\n<pre><code class=\"language-python\">class Solution:\n    def subsets(self, nums):\n        index = 0\n        value=nums[index]\n        ans = [[]]\n        memo = {0:None}\n\n        ans.append([])\n        # base case [1,2,3]\n        for i in nums:\n            ans[1].append(i)\n\n        for i in ans:\n            if len(i) > 1:\n                j=len(i)-1\n                while j >= 0:\n                    copy = i[:]\n                    copy.remove(i[j])\n                    if copy not in ans:\n                        ans.append(copy)\n                    j-=1\n        return ans\n\nproblem = Solution()\n\nprint(problem.subsets([1,2,3]))\n</code></pre>\n<h2>⭐Recursive</h2>\n<pre><code class=\"language-python\">def powerSet(array, idx = None):\n    if idx is None:\n        idx = len(array) - 1\n    elif idx &#x3C; 0:\n        return [[]]\n    ele = array[idx]\n    subsets = powerSet(array, idx - 1)\n    for i in range(len(subsets)):\n        currentSubset = subsets[i]\n        subsets.append(currentSubset + [ele])\n    return subsets\n\npowerSet([1,2,3])\n</code></pre>\n<h2>🌟Iterative</h2>\n<pre><code class=\"language-python\">def powerSet(array):\n    subsets=[[]]\n    for ele in array:\n        for i in range(len(subsets)):\n            currentSubset = subsets[i]\n            subsets.append(currentSubset + [ele])\n    return subsets\n\npowerSet([1,2,3])\n</code></pre>"}},"pageContext":{"slug":"0078 Subsets Power Set"}}}