{"componentChunkName":"component---src-templates-blog-js","path":"/blog/0933 Number of Recent Calls","result":{"data":{"markdownRemark":{"frontmatter":{"title":"","date":null},"html":"<h1>0933. Number of Recent Calls</h1>\n<h2>933. Number of Recent Calls</h2>\n<p>Write a class RecentCounter to count recent requests.</p>\n<p>It has only one method: ping(int t), where t represents some time in milliseconds.</p>\n<p>Return the number of pings that have been made from 3000 milliseconds ago until now.</p>\n<p>Any ping with time in [t - 3000, t] will count, including the current ping.</p>\n<p>It is guaranteed that every call to ping uses a strictly larger value of t than before.</p>\n<pre><code class=\"language-text\">Example 1:\n\nInput: inputs = [\"RecentCounter\",\"ping\",\"ping\",\"ping\",\"ping\"], inputs = [[],[1],[100],[3001],[3002]]\nOutput: [null,1,2,3,3]\n</code></pre>\n<p>Note:</p>\n<p>Each test case will have at most 10000 calls to ping. Each test case will call ping with strictly increasing values of t. Each call to ping will have 1 &#x3C;= t &#x3C;= 10^9.</p>\n<h2>Using a list @shichunyu on May 7, 2020</h2>\n<pre><code class=\"language-python\">class RecentCounter(object):\n\n    def __init__(self):\n        self.curt = 0\n        self.pings = []\n        self.call_num = 0\n\n    def ping(self, t):\n        \"\"\"\n        :type t: int\n        :rtype: int\n        \"\"\"\n\n        if t == None:\n            return self.call_num\n        self.pings.append(t) \n        self.curt = t\n        i = 0\n        while self.pings[i] &#x3C; self.curt - 3000:\n                del self.pings[i]\n        self.call_num = len(self.pings)\n        print(self.call_num)\n        return self.call_num\n\n\n# \"\"\"\n# inputs = [[],[1],[100],[3001],[3002]]\n# Output: [null,1,2,3,3]\n# \"\"\"\n# obj = RecentCounter()\n# param_1 = obj.ping(None)\n# param_1 = obj.ping(1)\n# param_1 = obj.ping(100)\n# param_1 = obj.ping(3001)\n# param_1 = obj.ping(3002)\n\n# print(obj.call_num)\n\n# \"\"\"\n# Input: [[],[1178],[1483],[1563],[4054],[4152]]\n# Output: [null,4,5,6,6,7]\n# \"\"\"\n# obj = RecentCounter()\n# param_1 = obj.ping(None)\n# param_1 = obj.ping(1178)\n# param_1 = obj.ping(1483)\n# param_1 = obj.ping(1563)\n# param_1 = obj.ping(4054)\n# param_1 = obj.ping(4152)\n\n\"\"\"\nInput: [[],[642],[1849],[4921],[5936],[5957]]\nOutput: [null,1,2,1,2,3]\n\"\"\"\nobj = RecentCounter()\nparam_1 = obj.ping(None)\nparam_1 = obj.ping(642) # \nparam_1 = obj.ping(1849) # 2\nparam_1 = obj.ping(4921) # 2\nparam_1 = obj.ping(5936)\nparam_1 = obj.ping(5957)\n</code></pre>\n<h2>Using DeQue - Shorter code</h2>\n<pre><code class=\"language-python\">class RecentCounter:\n\n    def __init__(self):\n        self.p = collections.deque()        \n\n    def ping(self, t):\n        self.p.append(t)\n        while self.p[0] &#x3C; t - 3000:\n            self.p.popleft()\n        return len(self.p)\n</code></pre>"}},"pageContext":{"slug":"0933 Number of Recent Calls"}}}