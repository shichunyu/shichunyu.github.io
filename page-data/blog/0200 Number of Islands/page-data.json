{"componentChunkName":"component---src-templates-blog-js","path":"/blog/0200 Number of Islands","result":{"data":{"markdownRemark":{"frontmatter":{"title":"","date":null},"html":"<h1 id=\"200-number-of-islands\" style=\"position:relative;\"><a href=\"#200-number-of-islands\" aria-label=\"200 number of islands permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>200. Number of Islands</h1>\n<ul>\n<li>ID: 200</li>\n<li>Level: Medium</li>\n<li>Minyoung: May 03, 2020</li>\n<li>Tags: Recursion</li>\n</ul>\n<p>Given a 2d grid map of <code>'1'</code>s (land) and <code>'0'</code>s (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.</p>\n<p><strong>Example 1:</strong></p>\n<pre><code class=\"language-text\">Input:\n11110\n11010\n11000\n00000\n\nOutput: 1\n</code></pre>\n<p><strong>Example 2:</strong></p>\n<pre><code class=\"language-text\">Input:\n11000\n11000\n00100\n00011\n\nOutput: 3\n</code></pre>\n<h2 id=\"depth-first-search\" style=\"position:relative;\"><a href=\"#depth-first-search\" aria-label=\"depth first search permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>‚≠êDepth First Search</h2>\n<pre><code class=\"language-python\">class Solution:\n    def numIslands(self, grid: List[List[str]]) -> int:\n        # island is formed by connecting adjacent lands horizontally and vertically\n        # 1. number of islands - dfs\n\n        # edge case\n        if not grid:\n            return 0\n\n\n        count = 0\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j] == \"1\": # run DFS\n                    self._dfs(grid,i,j)\n                    count += 1\n\n        return count\n\n    def _dfs(self,grid,i,j):\n        if i &#x3C; 0:\n            return\n\n        if j &#x3C; 0:\n            return\n\n        if i >= len(grid):\n            return\n\n        if j >= len(grid[0]):\n            return \n\n        if grid[i][j] != \"1\":\n            return\n\n        grid[i][j] = \"0\"\n\n        self._dfs(grid,i+1,j)\n        self._dfs(grid,i-1,j)\n        self._dfs(grid,i,j+1)\n        self._dfs(grid,i,j-1)\n</code></pre>"}},"pageContext":{"slug":"0200 Number of Islands"}}}